# SPDX-License-Identifier: Apache-2.0
name: graphcap
services:
  graphcap_server:
    container_name: graphcap_server
    build:
      context: ./src
      dockerfile: ./server/Dockerfile.server.dev
    ports:
      - 32100:32100
    volumes:
      - ./src/graphcap:/app/graphcap
      - ./src/server/server:/app/server/server
      - ./workspace:/workspace
    environment:
      - HOST_PLATFORM=${HOST_PLATFORM:-linux}
      - PYTHONPATH=/app/server
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@graphcap_postgres:5432/${POSTGRES_DB}
    env_file:
      - ./workspace/config/.env
    networks:
      - graphcap
    depends_on:
      graphcap_postgres:
        condition: service_healthy

  graphcap_postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "35433:5432"
    volumes:
      - graphcap_server_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - graphcap

  graphcap_studio:
    container_name: graphcap_ui
    build:
      context: ./graphcap_studio
      dockerfile: Dockerfile.client.dev
      args:
        - VITE_API_URL=http://localhost:32200/api
    ports:
      - "32200:32200"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:32200"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - ./.local/logs/graphcap_studio:/workspace/logs
      - ./workspace:/workspace
    develop:
      watch:
        - action: sync
          path: ./graphcap_studio/src
          target: /app/src
          ignore:
            - "**/.git"
            - "**/node_modules"
            - "**/.DS_Store"
        - action: sync
          path: ./graphcap_studio/public
          target: /app/public
        - action: sync
          path: ./graphcap_studio/index.html
          target: /app/index.html
        - action: sync
          path: ./graphcap_studio/vite.config.ts
          target: /app/vite.config.ts
        - action: sync+restart
          path: ./graphcap_studio/pnpm-lock.yaml
          target: /app/pnpm-lock.yaml
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=http://localhost:32100/api
      - VITE_WORKSPACE_PATH=/workspace/.local
      - VITE_MEDIA_SERVER_URL=http://localhost:32400
      - VITE_DATASETS_PATH=/workspace/datasets
    networks:
      - graphcap
    depends_on:
      - graphcap_media_server

  graphcap_media_server:
    container_name: graphcap_media_server
    build:
      context: ./servers/media_server
      dockerfile: Dockerfile.media_server.dev
    ports:
      - "32400:32400"
    volumes:
      - ./workspace:/workspace
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=32400
      - WORKSPACE_PATH=/workspace
      - DATASETS_PATH=/workspace/datasets
    develop:
      watch:
        - action: sync
          path: ./servers/media_server
          target: /app
          ignore:
            - "**/.git"
            - "**/node_modules"
            - "**/.DS_Store"
        - action: rebuild
          path: ./servers/media_server/package.json
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:32400/health"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - graphcap

  graphcap_pipelines:
    build:
      context: ./src
      dockerfile: pipelines/Dockerfile.pipelines.dev
    container_name: graphcap_pipelines
    volumes:
      - ./workspace:/workspace
      - ./src:/app
    environment:
      - DAGSTER_HOME=/workspace/.local/.dagster
      - DAGSTER_PORT=32300
      - DAGSTER_POSTGRES_USER=${POSTGRES_USER}
      - DAGSTER_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DAGSTER_POSTGRES_DB=${POSTGRES_DB}
      - PYTHONPATH=/app
    ports:
      - "32300:32300"
    networks:
      - graphcap
    depends_on:
      - graphcap_postgres
    env_file:
      - ./workspace/config/.env

  graphcap_data_service:
    container_name: graphcap_data_service
    build:
      context: ./servers/data_service
      dockerfile: Dockerfile.data_service.dev
    ports:
      - "32550:32550"
      - "32501:32501"  # Drizzle Kit Studio port
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=32550
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST:-graphcap_postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}
      - WORKSPACE_PATH=/workspace
      - DEBUG=true  # Enable debug mode
    volumes:
      - ./workspace:/workspace
      - ./servers/data_service/src:/app/src  # Mount src directory directly
    networks:
      - graphcap
    depends_on:
      graphcap_postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:32550/health"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 30s
    env_file:
      - ./workspace/config/.env

volumes:
  graphcap_server_db:

networks:
  graphcap:
    driver: bridge
